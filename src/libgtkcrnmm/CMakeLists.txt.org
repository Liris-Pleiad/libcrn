# libgtkcrnmm build script
set(LIBGTKCRNMM_VERSION_API "4")
set(LIBGTKCRNMM_VERSION_AGE "1")
set(LIBGTKCRNMM_VERSION_REVISION "1")

add_definitions(-DBUILDING_GTKCRNMM)

# add path to CRN.h
include_directories("${PROJECT_BINARY_DIR}/libcrn")
# add path to libcrn
include_directories("${PROJECT_SOURCE_DIR}/libcrn")
# add path to libgtkcrnmm
include_directories("${PROJECT_SOURCE_DIR}/libgtkcrnmm")
# add path to dependencies
include_directories(${GTKMM_INCLUDE_DIRS})
link_directories(${GTKMM_LIBRARY_DIRS})
include_directories(${GDKPB_INCLUDE_DIRS})
link_directories(${GDKPB_LIBRARY_DIRS})
include_directories(${PNG_INCLUDE_DIRS})
link_directories(${PNG_LIBRARY_DIRS})

# set sources
file(GLOB_RECURSE LIBGTKCRNMM_HEADERS *.h *.hpp)
source_group("Headers" FILES ${LIBGTKCRNMM_HEADERS})
file(GLOB_RECURSE LIBGTKCRNMM_SOURCES *.cpp)
source_group("Sources" FILES ${LIBGTKCRNMM_SOURCES})
file(GLOB_RECURSE LIBGTKCRNMM_MISC *.in *.txt *.cmake)
source_group("Misc" FILES ${LIBGTKCRNMM_MISC})

# create libgtkcrnmm
add_library(gtkcrnmm ${library_link_mode} ${LIBGTKCRNMM_SOURCES} ${LIBGTKCRNMM_HEADERS})
set_target_properties(gtkcrnmm PROPERTIES 
	COMPILE_FLAGS "${GTKMM_CFLAGS_OTHER}" 
	LINK_FLAGS "${GTKMM_LDFLAGS_OTHER}" 
	VERSION "${LIBGTKCRNMM_VERSION_API}.${LIBGTKCRNMM_VERSION_REVISION}.${LIBGTKCRNMM_VERSION_AGE}" 
	SOVERSION ${LIBGTKCRNMM_VERSION_API}
	LT_VERSION_CURRENT ${LIBGTKCRNMM_VERSION_API}
	LT_VERSION_AGE ${LIBGTKCRNMM_VERSION_AGE}
	LT_VERSION_REVISION ${LIBGTKCRNMM_VERSION_REVISION}
	LT_DEPENDENCY_LIBS "-lcrn ${LT_LDFLAGS}"
	OUTPUT_NAME "gtkcrnmm"
	)
# add dependencies
target_link_libraries(gtkcrnmm crn)

# installation
# object
install(TARGETS gtkcrnmm RUNTIME DESTINATION "${RUNTIME_INSTALL_PATH}" COMPONENT bin  LIBRARY DESTINATION "${LIBRARY_INSTALL_PATH}" COMPONENT bin ARCHIVE DESTINATION "${ARCHIVE_INSTALL_PATH}" COMPONENT bin)
# data
file(GLOB LIBGTKCRNMM_DATA data/*.png)
install(FILES ${LIBGTKCRNMM_DATA} DESTINATION "${CRN_DATA_PATH}" COMPONENT bin)
# includes
set(LIBGTKCRNMM_INCLUDE_INSTALL "include/libgtkcrnmm-${CRN_PACKAGE_VERSION_MAJOR}.${CRN_PACKAGE_VERSION_MINOR}")
install(DIRECTORY . DESTINATION ${LIBGTKCRNMM_INCLUDE_INSTALL} COMPONENT dev FILES_MATCHING PATTERN "*.h" PATTERN "data*" EXCLUDE REGEX ".*svn.*" EXCLUDE)
#install(DIRECTORY . DESTINATION ${LIBGTKCRNMM_INCLUDE_INSTALL} COMPONENT dev FILES_MATCHING PATTERN "*.hpp")
# devel libs

if(CMAKE_COMPILER_IS_GNUCXX)
	# libtool
	create_libtool_file(gtkcrnmm lib dev)
	# pkg-config
	set(PKGC_LIBGTKCRNMM_DEPS "libcrn")
	configure_file(
		"${PROJECT_SOURCE_DIR}/libgtkcrnmm/libgtkcrnmm.pc.in"
		"${PROJECT_BINARY_DIR}/libgtkcrnmm/libgtkcrnmm.pc"
		@ONLY)
	install(FILES "${PROJECT_BINARY_DIR}/libgtkcrnmm/libgtkcrnmm.pc" DESTINATION "lib/pkgconfig" COMPONENT dev)
endif(CMAKE_COMPILER_IS_GNUCXX)

