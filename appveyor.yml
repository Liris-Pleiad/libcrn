#---------------------------------#
#      general configuration      #
#---------------------------------#

#

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Operating system (build VM template)
os: Visual Studio 2015

# environment variables
environment:
  QT5_DIR: C:\Qt\5.7\msvc2015_64
#
  KIT_ROOT: C:\local_vs2015_64
#
  matrix:
  - B_USE_GTKMM2:   ON
    B_USE_GTKMM3D:  OFF
    B_USE_GTKMM3R:  OFF
    B_USE_QT4:      ON
    B_USE_QT5:      OFF
  - B_USE_GTKMM2:   OFF
    B_USE_GTKMM3D:  OFF
    B_USE_GTKMM3R:  ON
    B_USE_QT4:      OFF
    B_USE_QT5:      ON
  - B_USE_GTKMM2:   OFF
    B_USE_GTKMM3D:  ON
    B_USE_GTKMM3R:  OFF
    B_USE_QT4:      OFF
    B_USE_QT5:      OFF

# this is how to allow failing jobs in the matrix
matrix:
  fast_finish: true # set this flag to immediately finish build once one of the jobs fails
#  allow_failures:

# build cache to preserve files/folders between builds
#cache:
# - %KIT_ROOT% # don't work !?
#  - C:\local_vs2015_64 # cached folder size cannot exceed 500 MB, so OFF for the moment...

# scripts that are called at very beginning, before repo cloning
init:
#  - set
#  - msbuild /version
#  - cmake --version
#  - dir C:\Libraries
#  - dir C:\Libraries\boost_1_59_0
#  - dir C:\Qt
#  - dir C:\Qt\5.7
  - C:\Qt\5.7\msvc2015_64\bin\qmake --version
  - set PATH=%KIT_ROOT%\gettext;%PATH%
  - set APPVEYOR=TRUE
  - set CACHE=FALSE

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build Configuration, i.e. Debug, Release, etc
configuration:
  - Release
  - Debug

# MSBuild verbosity level
#  verbosity: quiet|minimal|normal|detailed

# scripts to run before build
before_build:
  - IF EXIST %KIT_ROOT% SET CACHE=TRUE
#
  - echo %CACHE%
  - IF %CACHE%==FALSE echo CACHE_IS_FALSE
  - IF %CACHE%==TRUE echo CACHE_IS_TRUE
#
  - IF %CACHE%==FALSE mkdir %KIT_ROOT%
  - IF %CACHE%==FALSE cd %KIT_ROOT%
# libiconv
  - IF %CACHE%==FALSE curl -s -O https://download.gforge.liris.cnrs.fr/meppbin/windows/vs2015/PLEIAD/packages/clean/libiconv-1.14.rar
  - IF %CACHE%==FALSE 7z x libiconv-1.14.rar > nul
# 3rdparty
  - IF %CACHE%==FALSE curl -s -O https://download.gforge.liris.cnrs.fr/meppbin/windows/vs2015/PLEIAD/packages/clean/3rdparty.rar
  - IF %CACHE%==FALSE 7z x 3rdparty.rar > nul
# zip
  - IF %CACHE%==FALSE curl -s -O https://download.gforge.liris.cnrs.fr/meppbin/windows/vs2015/PLEIAD/packages/clean/libzip-1.1.2.rar
  - IF %CACHE%==FALSE 7z x libzip-1.1.2.rar > nul
# haru(pdf)
  - IF %CACHE%==FALSE curl -s -O https://download.gforge.liris.cnrs.fr/meppbin/windows/vs2015/PLEIAD/packages/clean/libharu-2.3.0.rar
  - IF %CACHE%==FALSE 7z x libharu-2.3.0.rar > nul
# bin_gettext
  - IF %CACHE%==FALSE curl -s -O https://download.gforge.liris.cnrs.fr/meppbin/windows/vs2015/PLEIAD/packages/clean/bin_gettext.rar
  - IF %CACHE%==FALSE 7z x bin_gettext.rar > nul
# gtkmm2
  - IF %CACHE%==FALSE curl -s -O https://download.gforge.liris.cnrs.fr/meppbin/windows/vs2015/PLEIAD/packages/clean/gtkmm2.7z
  - IF %CACHE%==FALSE 7z x gtkmm2.7z > nul
# gtkmm3_debug
  - IF %CACHE%==FALSE curl -s -O https://download.gforge.liris.cnrs.fr/meppbin/windows/vs2015/PLEIAD/packages/clean/gtkmm3_debug.7z
  - IF %CACHE%==FALSE 7z x gtkmm3_debug.7z > nul
# gtkmm3_release
  - IF %CACHE%==FALSE curl -s -O https://download.gforge.liris.cnrs.fr/meppbin/windows/vs2015/PLEIAD/packages/clean/gtkmm3_release.7z
  - IF %CACHE%==FALSE 7z x gtkmm3_release.7z > nul
# Qt4
  - IF %CACHE%==FALSE curl -s -O https://download.gforge.liris.cnrs.fr/meppbin/windows/vs2015/MEPP/packages/clean/qt-4.8.7-x64-msvc2015.7z
  - IF %CACHE%==FALSE 7z x qt-4.8.7-x64-msvc2015.7z > nul
# OpenCV
  - IF %CACHE%==FALSE curl -s -O https://download.gforge.liris.cnrs.fr/meppbin/windows/vs2015/PLEIAD/packages/clean/opencv-3.1.0.7z
  - IF %CACHE%==FALSE 7z x opencv-3.1.0.7z > nul
#
  - cd %APPVEYOR_BUILD_FOLDER%
  - cmake . -G"Visual Studio 14 2015 Win64" -DMSVC_KIT_ROOT=%KIT_ROOT% -DCRN_DEPENDENCY_PNG=OFF -DCRN_DEPENDENCY_GTKMM2=%B_USE_GTKMM2% -DCRN_DEPENDENCY_GTKMM3_DEBUG=%B_USE_GTKMM3D% -DCRN_DEPENDENCY_GTKMM3_RELEASE=%B_USE_GTKMM3R% -DCRN_DEPENDENCY_ZIP=ON -DCRN_DEPENDENCY_HARUPDF=ON -DCRN_DEPENDENCY_QT4=%B_USE_QT4% -DCRN_DEPENDENCY_QT5=%B_USE_QT5%

# to run your custom scripts instead of automatic MSBuild
build_script:
  - msbuild /m libcrn.sln # /m is ignored ? (but not really important because the VM has only one processor !)
